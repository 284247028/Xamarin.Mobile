<Type Name="Geolocator" FullName="Xamarin.Geolocation.Geolocator">
  <TypeSignature Language="C#" Value="public class Geolocator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Geolocator extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Mobile</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Geolocator (Android.Locations.LocationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Locations.LocationManager manager) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="manager" Type="Android.Locations.LocationManager" />
      </Parameters>
      <Docs>
        <param name="manager">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredAccuracy">
      <MemberSignature Language="C#" Value="public double DesiredAccuracy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 DesiredAccuracy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the desired accuracy in meters.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentPosition">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Xamarin.Geolocation.Position&gt; GetCurrentPosition (int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Xamarin.Geolocation.Position&gt; GetCurrentPosition(int32 timeout) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Xamarin.Geolocation.Position&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="timeout">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentPosition">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Xamarin.Geolocation.Position&gt; GetCurrentPosition (System.Threading.CancellationToken cancelToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Xamarin.Geolocation.Position&gt; GetCurrentPosition(valuetype System.Threading.CancellationToken cancelToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Xamarin.Geolocation.Position&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancelToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancelToken">A <see cref="T:System.Threading.CancellationToken" /> to cancel the position request.</param>
        <summary>
            Gets a future for the current position.
            </summary>
        <returns>
            A <see cref="!:Task{TResult}" /> for the current position.
            </returns>
        <remarks>
          <para>
            If the underlying OS needs to request location access permissions, it will occur automatically.
            If the user has disallowed location access (now or previously), the future will be canceled.
            </para>
          <para>
            The first position that is within the <see cref="P:Xamarin.Geolocation.Geolocator.DesiredAccuracy" /> will be returned.
            </para>
          <para>
            If this <see cref="!:IGeolocation" /> currently <see cref="P:Xamarin.Geolocation.Geolocator.IsListening" />, the future will be
            set immediately with the last retrieved position.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentPosition">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Xamarin.Geolocation.Position&gt; GetCurrentPosition (int timeout, System.Threading.CancellationToken cancelToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Xamarin.Geolocation.Position&gt; GetCurrentPosition(int32 timeout, valuetype System.Threading.CancellationToken cancelToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Xamarin.Geolocation.Position&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="cancelToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeout">To be added.</param>
        <param name="cancelToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGeolocationAvailable">
      <MemberSignature Language="C#" Value="public bool IsGeolocationAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGeolocationAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether geolocation services are available on the device.
            </summary>
        <value>
          <c>true</c> if geolocation services are available; otherwise, <c>false</c>.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGeolocationEnabled">
      <MemberSignature Language="C#" Value="public bool IsGeolocationEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGeolocationEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether geolocation is available and enabled.
            </summary>
        <value>
          <c>true</c> if geolocation is available and enabled; otherwise, <c>false</c>.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsListening">
      <MemberSignature Language="C#" Value="public bool IsListening { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsListening" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets whether the position is currently being listened to.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PositionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Xamarin.Geolocation.PositionEventArgs&gt; PositionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Xamarin.Geolocation.PositionEventArgs&gt; PositionChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Xamarin.Geolocation.PositionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Raised when position information is updated.
            </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:Xamarin.Geolocation.Position" />
      </Docs>
    </Member>
    <Member MemberName="PositionError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Xamarin.Geolocation.PositionErrorEventArgs&gt; PositionError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Xamarin.Geolocation.PositionErrorEventArgs&gt; PositionError" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Xamarin.Geolocation.PositionErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Raised when there is an error retrieving position information.
            </summary>
        <remarks>
          <para>
            Temporary errors will not be reported.
            </para>
          <para>
            If an error occurs, listening will be stopped automatically.
            </para>
        </remarks>
        <altmember cref="T:Xamarin.Geolocation.PositionErrorCode" />
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="public void StartListening (int minTime, double minDistance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartListening(int32 minTime, float64 minDistance) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minTime" Type="System.Int32" />
        <Parameter Name="minDistance" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="minTime">A hint for the minimum time between position updates in milliseconds.</param>
        <param name="minDistance">A hint for the minimum distance between position updates in meters.</param>
        <summary>
            Starts listening to position changes with specified thresholds.
            </summary>
        <remarks>
          <para>
            If the underlying OS needs to request location access permissions, it will occur automatically.
            </para>
          <para>
            If a <see cref="E:Xamarin.Geolocation.Geolocator.PositionError" /> occurs, listening will be halted automatically.
            </para>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="minTime" /> is &lt; 0.
            </para>
          <para>or</para>
          <para>
            <paramref name="minDistance" /> is &lt; 0.
            </para>
        </exception>
        <exception cref="T:System.InvalidOperationException">This geolocation already <see cref="P:Xamarin.Geolocation.Geolocator.IsListening" />.</exception>
        <altmember cref="M:Xamarin.Geolocation.Geolocator.StopListening" />
        <altmember cref="P:Xamarin.Geolocation.Geolocator.IsListening" />
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="public void StopListening ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopListening() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Stops listening to position changes.
            </summary>
        <remarks>
            If you stop listening before the first position has arrived, and have a pending call to
            <see cref="M:Xamarin.Geolocation.Geolocator.GetCurrentPosition(System.Int32)" />, it will be canceled.
            </remarks>
        <altmember cref="M:Xamarin.Geolocation.Geolocator.StartListening(System.Int32,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="SupportsHeading">
      <MemberSignature Language="C#" Value="public bool SupportsHeading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsHeading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether this <see cref="!:MonoMobile.Extensions.IGeolocation" /> supports heading.
            </summary>
        <value>
          <c>true</c> if supports heading; otherwise, <c>false</c>.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
